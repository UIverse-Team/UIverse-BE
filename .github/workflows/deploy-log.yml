#name: Deploy to AWS EB

# main 브랜치에 PR 병합되었을 때
#on:
#  pull_request:
#    branches:
#      - develop
#    types:
#      - closed
#    # 해당 파일 또는 폴더 하위 파일들이 변경되었을 때에만!!!
#    paths:
#      - backend/JiShop/src/**
#      - backend/log/src/**
#      - build.gradle
#      - .github/workflows/deploy-dev.yml
#      - .ebextensions/**
#      - .platform/**
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout with submodules
#        uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.ACCESS_KEY }}
#          submodules: true  # 서브모듈도 함께 가져옴
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: zulu
#
#      - name: Pemission
#        working-directory: backend/JiShop
#        run: chmod +x ./gradlew
#      - name: Build with Gradle
#        working-directory: backend/JiShop
#        run: ./gradlew clean build -x test
#
#      # UTC가 기준이기 때문에 한국시간으로 맞추려면 +9시간 해야 한다
#      - name: Get current time
#        uses: 1466587594/get-current-time@v2
#        id: current-time
#        with:
#          format: YYYY-MM-DDTHH-mm-ss
#          utcOffset: "+09:00"
#
#      - name: Show Current Time
#        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
#
#      # EB에 CD 하기 위해 추가 작성
#      - name: Generate deployment package
#        run: |
#          mkdir -p deploy
#          # 실행 가능한 JAR 찾기 (plain.jar 제외)
#          JAR_FILE=$(find backend/JiShop/build/libs -type f -name "*.jar" ! -name "*-plain.jar" | head -n 1)
#          # JAR 파일이 없으면 오류 출력 후 종료
#          if [ -z "$JAR_FILE" ]; then
#            echo "Error: No executable JAR file found in build/libs"
#            exit 1
#          fi
#
#          # 찾은 JAR 파일을 application.jar로 복사
#          cp "$JAR_FILE" deploy/application.jar
#
#          # EB 배포에 필요한 파일 복사
#          cp Procfile deploy/Procfile
#          cp -r .ebextensions deploy/.ebextensions
#          cd deploy && zip -r deploy.zip .
##          cp -r backend/JiShop/src/main/resources/config. deploy/config  # 설정 파일 포함
#          # 배포 패키지 압축
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v21
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#          application_name: ora-eb # 엘리스틱 빈스톡 애플리케이션 이름!
#          environment_name: Ora-eb-env-1 # 엘리스틱 빈스톡 환경 이름!
#          version_label: blog-${{steps.current-time.outputs.formattedTime}}
#          region: ap-northeast-2
#          deployment_package: deploy/deploy.zip